topic:
  tracab-01:
    name: tracab_01_raw
    replication-factor: 2
    partitions: 3
  tracab-02:
    name: tracab_02_filter
    replication-factor: 2
    partitions: 3

filter:
  # true -> only take frames that are within the phase time (1st phase and 2nd phase)
  # false -> all frames are taken
  inPhase: true
  # "all" -> all frames with isBallInPlay setting 0 and 1
  # "0" -> only frames with isBallInPlay setting 0. 0 means game is not running.
  # "1" -> only frames with isBallInPlay setting 1. 1 means game is running.
  # anything else is treated as all
  isBallInPlay: all

spring:
  application:
    name: "spring-tracab-filter"

  kafka:
    bootstrap.servers:
      - ${DATAPLATFORM_IP}:9092
      - ${DATAPLATFORM_IP}:9093
    streams:
      application-id: ${spring.application.name}
      client-id: ${spring.application.name}-stream
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        # This is the default: log, fail and stop processing records (stop stream)
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler
    properties:
      bootstrap.servers:
        - ${spring.kafka.bootstrap.servers[0]}
        - ${spring.kafka.bootstrap.servers[1]}
      schema.registry.url: "http://${DATAPLATFORM_IP}:8081"
    # At application startup a missing topic on the broker will not fail the
    # application startup
    listener:
      missing-topics-fatal: false
